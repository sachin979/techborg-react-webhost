{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nfunction useDropdownMenu(itemCount, options) {\n  const [isOpen, setIsOpen] = react_1.useState(false);\n  const currentFocusIndex = react_1.useRef(null);\n  const firstRun = react_1.useRef(true);\n  const clickedOpen = react_1.useRef(false);\n  const buttonRef = react_1.useRef(null);\n  const itemRefs = react_1.useMemo(() => Array.from({\n    length: itemCount\n  }, () => react_1.createRef()), [itemCount]);\n\n  const isKeyboardEvent = e => e.key !== undefined;\n\n  const moveFocus = itemIndex => {\n    var _a;\n\n    currentFocusIndex.current = itemIndex;\n    (_a = itemRefs[itemIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  react_1.useEffect(() => {\n    if (firstRun.current) {\n      firstRun.current = false;\n      return;\n    }\n\n    if (isOpen && !(options === null || options === void 0 ? void 0 : options.disableFocusFirstItemOnClick)) {\n      moveFocus(0);\n    } else if (!isOpen) {\n      clickedOpen.current = false;\n    }\n  }, [isOpen]);\n  react_1.useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    const removalTracker = {\n      removed: false\n    };\n\n    const handleEveryClick = event => {\n      setTimeout(() => {\n        if (!(event.target instanceof Element)) {\n          return;\n        }\n\n        if (event.target.closest('[role=\"menu\"]') instanceof Element) {\n          return;\n        }\n\n        setIsOpen(false);\n      }, 10);\n    };\n\n    setTimeout(() => {\n      if (removalTracker.removed) {\n        return;\n      }\n\n      document.addEventListener('click', handleEveryClick);\n    }, 1);\n    return () => {\n      removalTracker.removed = true;\n      document.removeEventListener('click', handleEveryClick);\n    };\n  }, [isOpen]);\n  react_1.useEffect(() => {\n    const disableArrowScroll = event => {\n      if (isOpen && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', disableArrowScroll);\n    return () => document.removeEventListener('keydown', disableArrowScroll);\n  }, [isOpen]);\n\n  const buttonListener = e => {\n    if (isKeyboardEvent(e)) {\n      const {\n        key\n      } = e;\n\n      if (!['Enter', ' ', 'Tab', 'ArrowDown', 'Escape'].includes(key)) {\n        return;\n      }\n\n      if ((key === 'Tab' || key === 'ArrowDown') && clickedOpen.current && isOpen) {\n        e.preventDefault();\n        moveFocus(0);\n      }\n\n      if (key === 'Enter' || key === ' ') {\n        e.preventDefault();\n        setIsOpen(true);\n      }\n\n      if (key === 'Escape') {\n        e.preventDefault();\n        setIsOpen(false);\n      }\n    } else {\n      if (options === null || options === void 0 ? void 0 : options.disableFocusFirstItemOnClick) {\n        clickedOpen.current = !isOpen;\n      }\n\n      setIsOpen(!isOpen);\n    }\n  };\n\n  const itemListener = e => {\n    var _a;\n\n    const {\n      key\n    } = e;\n\n    if (['Tab', 'Shift', 'Enter', 'Escape', 'ArrowUp', 'ArrowDown', ' '].includes(key)) {\n      let newFocusIndex = currentFocusIndex.current;\n\n      if (key === 'Escape') {\n        setIsOpen(false);\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        return;\n      } else if (key === 'Tab') {\n        setIsOpen(false);\n        return;\n      } else if (key === 'Enter' || key === ' ') {\n        if (!e.currentTarget.href) {\n          e.currentTarget.click();\n        }\n\n        setIsOpen(false);\n        return;\n      }\n\n      if (newFocusIndex !== null) {\n        if (key === 'ArrowUp') {\n          newFocusIndex -= 1;\n        } else if (key === 'ArrowDown') {\n          newFocusIndex += 1;\n        }\n\n        if (newFocusIndex > itemRefs.length - 1) {\n          newFocusIndex = 0;\n        } else if (newFocusIndex < 0) {\n          newFocusIndex = itemRefs.length - 1;\n        }\n      }\n\n      if (newFocusIndex !== null) {\n        moveFocus(newFocusIndex);\n      }\n\n      return;\n    }\n\n    if (/[a-zA-Z0-9./<>?;:\"'`!@#$%^&*()\\\\[\\]{}_+=|\\\\-~,]/.test(key)) {\n      const index = itemRefs.findIndex(ref => {\n        var _a, _b, _c, _d, _e, _f;\n\n        return ((_b = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.innerText) === null || _b === void 0 ? void 0 : _b.toLowerCase().startsWith(key.toLowerCase())) || ((_d = (_c = ref.current) === null || _c === void 0 ? void 0 : _c.textContent) === null || _d === void 0 ? void 0 : _d.toLowerCase().startsWith(key.toLowerCase())) || ((_f = (_e = ref.current) === null || _e === void 0 ? void 0 : _e.getAttribute('aria-label')) === null || _f === void 0 ? void 0 : _f.toLowerCase().startsWith(key.toLowerCase()));\n      });\n\n      if (index !== -1) {\n        moveFocus(index);\n      }\n    }\n  };\n\n  const buttonProps = {\n    onKeyDown: buttonListener,\n    onClick: buttonListener,\n    tabIndex: 0,\n    ref: buttonRef,\n    role: 'button',\n    'aria-haspopup': true,\n    'aria-expanded': isOpen\n  };\n  const itemProps = Array.from({\n    length: itemCount\n  }, (_ignore, index) => ({\n    onKeyDown: itemListener,\n    tabIndex: -1,\n    role: 'menuitem',\n    ref: itemRefs[index]\n  }));\n  return {\n    buttonProps,\n    itemProps,\n    isOpen,\n    setIsOpen,\n    moveFocus\n  };\n}\n\nexports.default = useDropdownMenu;","map":{"version":3,"sources":["D:/Coprate Data/TECHBORG/Web/techborg-react-website/node_modules/react-accessible-dropdown-menu-hook/dist/use-dropdown-menu.js"],"names":["Object","defineProperty","exports","value","react_1","require","useDropdownMenu","itemCount","options","isOpen","setIsOpen","useState","currentFocusIndex","useRef","firstRun","clickedOpen","buttonRef","itemRefs","useMemo","Array","from","length","createRef","isKeyboardEvent","e","key","undefined","moveFocus","itemIndex","_a","current","focus","useEffect","disableFocusFirstItemOnClick","removalTracker","removed","handleEveryClick","event","setTimeout","target","Element","closest","document","addEventListener","removeEventListener","disableArrowScroll","preventDefault","buttonListener","includes","itemListener","newFocusIndex","currentTarget","href","click","test","index","findIndex","ref","_b","_c","_d","_e","_f","innerText","toLowerCase","startsWith","textContent","getAttribute","buttonProps","onKeyDown","onClick","tabIndex","role","itemProps","_ignore","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nfunction useDropdownMenu(itemCount, options) {\n    const [isOpen, setIsOpen] = react_1.useState(false);\n    const currentFocusIndex = react_1.useRef(null);\n    const firstRun = react_1.useRef(true);\n    const clickedOpen = react_1.useRef(false);\n    const buttonRef = react_1.useRef(null);\n    const itemRefs = react_1.useMemo(() => Array.from({ length: itemCount }, () => react_1.createRef()), [itemCount]);\n    const isKeyboardEvent = (e) => e.key !== undefined;\n    const moveFocus = (itemIndex) => {\n        var _a;\n        currentFocusIndex.current = itemIndex;\n        (_a = itemRefs[itemIndex].current) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    react_1.useEffect(() => {\n        if (firstRun.current) {\n            firstRun.current = false;\n            return;\n        }\n        if (isOpen && !(options === null || options === void 0 ? void 0 : options.disableFocusFirstItemOnClick)) {\n            moveFocus(0);\n        }\n        else if (!isOpen) {\n            clickedOpen.current = false;\n        }\n    }, [isOpen]);\n    react_1.useEffect(() => {\n        if (!isOpen) {\n            return;\n        }\n        const removalTracker = {\n            removed: false,\n        };\n        const handleEveryClick = (event) => {\n            setTimeout(() => {\n                if (!(event.target instanceof Element)) {\n                    return;\n                }\n                if (event.target.closest('[role=\"menu\"]') instanceof Element) {\n                    return;\n                }\n                setIsOpen(false);\n            }, 10);\n        };\n        setTimeout(() => {\n            if (removalTracker.removed) {\n                return;\n            }\n            document.addEventListener('click', handleEveryClick);\n        }, 1);\n        return () => {\n            removalTracker.removed = true;\n            document.removeEventListener('click', handleEveryClick);\n        };\n    }, [isOpen]);\n    react_1.useEffect(() => {\n        const disableArrowScroll = (event) => {\n            if (isOpen && (event.key === 'ArrowDown' || event.key === 'ArrowUp')) {\n                event.preventDefault();\n            }\n        };\n        document.addEventListener('keydown', disableArrowScroll);\n        return () => document.removeEventListener('keydown', disableArrowScroll);\n    }, [isOpen]);\n    const buttonListener = (e) => {\n        if (isKeyboardEvent(e)) {\n            const { key } = e;\n            if (!['Enter', ' ', 'Tab', 'ArrowDown', 'Escape'].includes(key)) {\n                return;\n            }\n            if ((key === 'Tab' || key === 'ArrowDown') && clickedOpen.current && isOpen) {\n                e.preventDefault();\n                moveFocus(0);\n            }\n            if (key === 'Enter' || key === ' ') {\n                e.preventDefault();\n                setIsOpen(true);\n            }\n            if (key === 'Escape') {\n                e.preventDefault();\n                setIsOpen(false);\n            }\n        }\n        else {\n            if (options === null || options === void 0 ? void 0 : options.disableFocusFirstItemOnClick) {\n                clickedOpen.current = !isOpen;\n            }\n            setIsOpen(!isOpen);\n        }\n    };\n    const itemListener = (e) => {\n        var _a;\n        const { key } = e;\n        if (['Tab', 'Shift', 'Enter', 'Escape', 'ArrowUp', 'ArrowDown', ' '].includes(key)) {\n            let newFocusIndex = currentFocusIndex.current;\n            if (key === 'Escape') {\n                setIsOpen(false);\n                (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n                return;\n            }\n            else if (key === 'Tab') {\n                setIsOpen(false);\n                return;\n            }\n            else if (key === 'Enter' || key === ' ') {\n                if (!e.currentTarget.href) {\n                    e.currentTarget.click();\n                }\n                setIsOpen(false);\n                return;\n            }\n            if (newFocusIndex !== null) {\n                if (key === 'ArrowUp') {\n                    newFocusIndex -= 1;\n                }\n                else if (key === 'ArrowDown') {\n                    newFocusIndex += 1;\n                }\n                if (newFocusIndex > itemRefs.length - 1) {\n                    newFocusIndex = 0;\n                }\n                else if (newFocusIndex < 0) {\n                    newFocusIndex = itemRefs.length - 1;\n                }\n            }\n            if (newFocusIndex !== null) {\n                moveFocus(newFocusIndex);\n            }\n            return;\n        }\n        if (/[a-zA-Z0-9./<>?;:\"'`!@#$%^&*()\\\\[\\]{}_+=|\\\\-~,]/.test(key)) {\n            const index = itemRefs.findIndex((ref) => {\n                var _a, _b, _c, _d, _e, _f;\n                return ((_b = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.innerText) === null || _b === void 0 ? void 0 : _b.toLowerCase().startsWith(key.toLowerCase())) ||\n                    ((_d = (_c = ref.current) === null || _c === void 0 ? void 0 : _c.textContent) === null || _d === void 0 ? void 0 : _d.toLowerCase().startsWith(key.toLowerCase())) ||\n                    ((_f = (_e = ref.current) === null || _e === void 0 ? void 0 : _e.getAttribute('aria-label')) === null || _f === void 0 ? void 0 : _f.toLowerCase().startsWith(key.toLowerCase()));\n            });\n            if (index !== -1) {\n                moveFocus(index);\n            }\n        }\n    };\n    const buttonProps = {\n        onKeyDown: buttonListener,\n        onClick: buttonListener,\n        tabIndex: 0,\n        ref: buttonRef,\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': isOpen,\n    };\n    const itemProps = Array.from({ length: itemCount }, (_ignore, index) => ({\n        onKeyDown: itemListener,\n        tabIndex: -1,\n        role: 'menuitem',\n        ref: itemRefs[index],\n    }));\n    return { buttonProps, itemProps, isOpen, setIsOpen, moveFocus };\n}\nexports.default = useDropdownMenu;\n"]},"metadata":{},"sourceType":"script"}